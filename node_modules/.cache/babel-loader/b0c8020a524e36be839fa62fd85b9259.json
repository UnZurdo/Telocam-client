{"remainingRequest":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js!/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vuetify-loader/lib/loader.js!/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue","mtime":1550436041758},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\nimport BasicVueChat from \"basic-vue-chat\";\nimport moment from \"moment\";\nimport io from \"socket.io-client\";\nexport default {\n  components: {\n    BasicVueChat: BasicVueChat\n  },\n  name: \"Chat\",\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token\n    }, _defineProperty(_ref, \"user\", localStorage.user), _defineProperty(_ref, \"socket\", io(\"\".concat(API_BASE, \"/mychat\"))), _defineProperty(_ref, \"conversaciones\", []), _defineProperty(_ref, \"rendered\", false), _defineProperty(_ref, \"feed\", [{\n      id: 0,\n      author: \"Person\",\n      contents: \"¿Tienes alguna pregunta?\",\n      date: \"16:30\"\n    }]), _ref;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    console.log(this.user);\n    var URL = \"\".concat(API_BASE, \"/chat/\") + this.$route.params.id;\n    axios.get(URL, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.token\n      }\n    }).then(function (response) {\n      var msg = response.data.data;\n      var messages = msg.map(function (m) {\n        return _this.parseMsg(m);\n      });\n      _this.conversaciones = messages;\n      console.log(\"Mounted\", _this.conversaciones, _this.feed);\n    });\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n    this.socket.on(\"MESSAGE\", function (data) {\n      console.log(\"MESSAGE\", data);\n\n      var msg = _this.parseMsg(data);\n\n      _this.conversaciones.push(msg);\n\n      _this.msg = msg.contents;\n    });\n  },\n  methods: {\n    parseMsg: function parseMsg(data) {\n      var dateParsed = data.created_date.split(\"T\");\n      var hourParsed = dateParsed[1].split(\":\");\n      var hour = hourParsed[0] + \":\" + hourParsed[1];\n      var res = {\n        id: data.user === this.user ? 1 : 0,\n        author: data.user === this.user ? \"Me\" : \"Person\",\n        contents: data.text,\n        date: hour\n      };\n      this.feed.push(res);\n      return res;\n    },\n    sendMessage: function sendMessage(msg) {\n      console.log(\"SEND_MESSAGE\", msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id,\n        created_date: moment().format()\n      });\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mensajes\">\n    <v-container>\n      <h1 class=\"heading grey--text\"></h1>\n    </v-container>\n    <v-container>\n      <basic-vue-chat\n        :initial-feed=\"feed\"\n        :initialAuthorId=\"0\"\n        @newOwnMessage=\"sendMessage\"\n        :title=\"''\"\n      />\n    </v-container>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\nimport BasicVueChat from \"basic-vue-chat\";\nimport moment from \"moment\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  components: { BasicVueChat },\n  name: \"Chat\",\n  data() {\n    return {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token,\n      user: localStorage.user,\n      socket: io(`${API_BASE}/mychat`),\n      conversaciones: [],\n      rendered: false,\n      feed: [\n        {\n          id: 0,\n          author: \"Person\",\n          contents: \"¿Tienes alguna pregunta?\",\n          date: \"16:30\"\n        }\n      ]\n    };\n  },\n  mounted() {\n    console.log(this.user);\n    const URL = `${API_BASE}/chat/` + this.$route.params.id;\n    axios\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.token\n        }\n      })\n      .then(response => {\n        const msg = response.data.data;\n        const messages = msg.map(m => this.parseMsg(m));\n        this.conversaciones = messages;\n        console.log(\"Mounted\", this.conversaciones, this.feed);\n      });\n\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n\n    this.socket.on(\"MESSAGE\", data => {\n      console.log(\"MESSAGE\", data);\n      var msg = this.parseMsg(data);\n      this.conversaciones.push(msg);\n      this.msg = msg.contents;\n    });\n  },\n  methods: {\n    parseMsg(data) {\n      var dateParsed = data.created_date.split(\"T\");\n      var hourParsed = dateParsed[1].split(\":\");\n      var hour = hourParsed[0] + \":\" + hourParsed[1];\n      var res = {\n        id: data.user === this.user ? 1 : 0,\n        author: data.user === this.user ? \"Me\" : \"Person\",\n        contents: data.text,\n        date: hour\n      };\n      this.feed.push(res);\n      return res;\n    },\n    sendMessage(msg) {\n      console.log(\"SEND_MESSAGE\", msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id,\n        created_date: moment().format()\n      });\n    }\n  },\n  computed: {}\n};\n</script>\n\n<style  scoped>\n.window__header__container {\n  background: linear-gradient(90deg, #888888, #909090) !important;\n}\n</style>\n"],"sourceRoot":"src/views"}]}