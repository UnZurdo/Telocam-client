{"remainingRequest":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js!/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/zurdo/Projects/ProyectoSoftware/client/src/store.js","dependencies":[{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/src/store.js","mtime":1550183238997},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nimport { API_BASE } from \"./config\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: \"\",\n    token: localStorage.getItem(\"token\") || \"\",\n    esAdmin: localStorage.getItem(\"esAdmin\") || false,\n    user: {}\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = \"loading\";\n    },\n    auth_success: function auth_success(state, token, user) {\n      state.status = \"success\";\n      state.token = token;\n      state.user = user;\n      console.log(\"Auth sucessful\", state);\n    },\n    auth_error: function auth_error(state) {\n      state.status = \"error\";\n    },\n    logout: function logout(state) {\n      state.status = \"\";\n      state.token = \"\";\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        commit(\"auth_request\");\n        axios({\n          url: \"\".concat(API_BASE, \"/user/login\"),\n          data: user,\n          method: \"POST\"\n        }).then(function (resp) {\n          console.log(resp);\n          var token = resp.data.Authorization;\n          var user = resp.data.user;\n          console.log(token, user);\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"user\", user); // Add the following line:\n\n          axios.defaults.headers.common[\"Authorization\"] = token;\n          commit(\"auth_success\", token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit(\"auth_error\");\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var commit = _ref2.commit;\n      return new _Promise(function (resolve, reject) {\n        commit(\"auth_request\");\n        axios({\n          url: \"\".concat(API_BASE, \"/user/\"),\n          data: user,\n          method: \"POST\"\n        }).then(function (resp) {\n          console.log(resp);\n          var token = resp.data.Authorization;\n          var user = resp.data.user;\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"user\", user); // Add the following line:\n\n          axios.defaults.headers.common[\"Authorization\"] = token;\n          commit(\"auth_success\", token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit(\"auth_error\", err);\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new _Promise(function (resolve, reject) {\n        commit(\"logout\");\n        localStorage.removeItem(\"token\");\n        delete axios.defaults.headers.common[\"Authorization\"];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    },\n    token: function token(state) {\n      return state.token;\n    }\n  }\n});",{"version":3,"sources":["/Users/zurdo/Projects/ProyectoSoftware/client/src/store.js"],"names":["Vue","Vuex","axios","API_BASE","use","Store","state","status","token","localStorage","getItem","esAdmin","user","mutations","auth_request","auth_success","console","log","auth_error","logout","actions","login","commit","resolve","reject","url","data","method","then","resp","Authorization","setItem","defaults","headers","common","catch","err","removeItem","register","getters","isLoggedIn","authStatus"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nimport { API_BASE } from \"./config\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    status: \"\",\n    token: localStorage.getItem(\"token\") || \"\",\n    esAdmin: localStorage.getItem(\"esAdmin\") || false,\n    user: {}\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = \"loading\";\n    },\n    auth_success(state, token, user) {\n      state.status = \"success\";\n      state.token = token;\n      state.user = user;\n      console.log(\"Auth sucessful\", state);\n    },\n    auth_error(state) {\n      state.status = \"error\";\n    },\n    logout(state) {\n      state.status = \"\";\n      state.token = \"\";\n    }\n  },\n  actions: {\n    login({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit(\"auth_request\");\n        axios({\n          url: `${API_BASE}/user/login`,\n          data: user,\n          method: \"POST\"\n        })\n          .then(resp => {\n            console.log(resp);\n\n            const token = resp.data.Authorization;\n            const user = resp.data.user;\n\n            console.log(token, user);\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"user\", user);\n\n            // Add the following line:\n            axios.defaults.headers.common[\"Authorization\"] = token;\n            commit(\"auth_success\", token, user);\n\n            resolve(resp);\n          })\n          .catch(err => {\n            commit(\"auth_error\");\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"user\");\n\n            reject(err);\n          });\n      });\n    },\n    register({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit(\"auth_request\");\n        axios({\n          url: `${API_BASE}/user/`,\n          data: user,\n          method: \"POST\"\n        })\n          .then(resp => {\n            console.log(resp);\n            const token = resp.data.Authorization;\n            const user = resp.data.user;\n\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"user\", user);\n\n            // Add the following line:\n            axios.defaults.headers.common[\"Authorization\"] = token;\n            commit(\"auth_success\", token, user);\n            resolve(resp);\n          })\n          .catch(err => {\n            commit(\"auth_error\", err);\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"user\");\n\n            reject(err);\n          });\n      });\n    },\n    logout({ commit }) {\n      return new Promise((resolve, reject) => {\n        commit(\"logout\");\n        localStorage.removeItem(\"token\");\n        delete axios.defaults.headers.common[\"Authorization\"];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n    token: state => state.token\n  }\n});\n"]}]}