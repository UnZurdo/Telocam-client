{"remainingRequest":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue","mtime":1550436041758},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\nimport BasicVueChat from \"basic-vue-chat\";\nimport moment from \"moment\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  components: { BasicVueChat },\n  name: \"Chat\",\n  data() {\n    return {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token,\n      user: localStorage.user,\n      socket: io(`${API_BASE}/mychat`),\n      conversaciones: [],\n      rendered: false,\n      feed: [\n        {\n          id: 0,\n          author: \"Person\",\n          contents: \"¿Tienes alguna pregunta?\",\n          date: \"16:30\"\n        }\n      ]\n    };\n  },\n  mounted() {\n    console.log(this.user);\n    const URL = `${API_BASE}/chat/` + this.$route.params.id;\n    axios\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.token\n        }\n      })\n      .then(response => {\n        const msg = response.data.data;\n        const messages = msg.map(m => this.parseMsg(m));\n        this.conversaciones = messages;\n        console.log(\"Mounted\", this.conversaciones, this.feed);\n      });\n\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n\n    this.socket.on(\"MESSAGE\", data => {\n      console.log(\"MESSAGE\", data);\n      var msg = this.parseMsg(data);\n      this.conversaciones.push(msg);\n      this.msg = msg.contents;\n    });\n  },\n  methods: {\n    parseMsg(data) {\n      var dateParsed = data.created_date.split(\"T\");\n      var hourParsed = dateParsed[1].split(\":\");\n      var hour = hourParsed[0] + \":\" + hourParsed[1];\n      var res = {\n        id: data.user === this.user ? 1 : 0,\n        author: data.user === this.user ? \"Me\" : \"Person\",\n        contents: data.text,\n        date: hour\n      };\n      this.feed.push(res);\n      return res;\n    },\n    sendMessage(msg) {\n      console.log(\"SEND_MESSAGE\", msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id,\n        created_date: moment().format()\n      });\n    }\n  },\n  computed: {}\n};\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mensajes\">\n    <v-container>\n      <h1 class=\"heading grey--text\"></h1>\n    </v-container>\n    <v-container>\n      <basic-vue-chat\n        :initial-feed=\"feed\"\n        :initialAuthorId=\"0\"\n        @newOwnMessage=\"sendMessage\"\n        :title=\"''\"\n      />\n    </v-container>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\nimport BasicVueChat from \"basic-vue-chat\";\nimport moment from \"moment\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  components: { BasicVueChat },\n  name: \"Chat\",\n  data() {\n    return {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token,\n      user: localStorage.user,\n      socket: io(`${API_BASE}/mychat`),\n      conversaciones: [],\n      rendered: false,\n      feed: [\n        {\n          id: 0,\n          author: \"Person\",\n          contents: \"¿Tienes alguna pregunta?\",\n          date: \"16:30\"\n        }\n      ]\n    };\n  },\n  mounted() {\n    console.log(this.user);\n    const URL = `${API_BASE}/chat/` + this.$route.params.id;\n    axios\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.token\n        }\n      })\n      .then(response => {\n        const msg = response.data.data;\n        const messages = msg.map(m => this.parseMsg(m));\n        this.conversaciones = messages;\n        console.log(\"Mounted\", this.conversaciones, this.feed);\n      });\n\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n\n    this.socket.on(\"MESSAGE\", data => {\n      console.log(\"MESSAGE\", data);\n      var msg = this.parseMsg(data);\n      this.conversaciones.push(msg);\n      this.msg = msg.contents;\n    });\n  },\n  methods: {\n    parseMsg(data) {\n      var dateParsed = data.created_date.split(\"T\");\n      var hourParsed = dateParsed[1].split(\":\");\n      var hour = hourParsed[0] + \":\" + hourParsed[1];\n      var res = {\n        id: data.user === this.user ? 1 : 0,\n        author: data.user === this.user ? \"Me\" : \"Person\",\n        contents: data.text,\n        date: hour\n      };\n      this.feed.push(res);\n      return res;\n    },\n    sendMessage(msg) {\n      console.log(\"SEND_MESSAGE\", msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id,\n        created_date: moment().format()\n      });\n    }\n  },\n  computed: {}\n};\n</script>\n\n<style  scoped>\n.window__header__container {\n  background: linear-gradient(90deg, #888888, #909090) !important;\n}\n</style>\n"]}]}