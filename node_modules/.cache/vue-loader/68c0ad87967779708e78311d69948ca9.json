{"remainingRequest":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/src/views/Chat.vue","mtime":1550406830720},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zurdo/Projects/ProyectoSoftware/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  components: {},\n  name: \"Chat\",\n  data() {\n    return {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token,\n      conversaciones: [],\n      user: localStorage.user,\n      socket: io(`${API_BASE}/mychat`)\n    };\n  },\n  mounted() {\n    console.log(this.user);\n    const URL = `${API_BASE}/chat/` + this.$route.params.id;\n    axios\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.token\n        }\n      })\n      .then(response => {\n        this.conversaciones = response.data.data;\n        console.log(this.conversaciones);\n      });\n\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n\n    this.socket.on(\"MESSAGE\", data => {\n      console.log(data);\n      this.conversaciones.push(data);\n    });\n  },\n  methods: {\n    sendMessage(e) {\n      e.preventDefault();\n      console.log(this.socket);\n\n      //this.conversaciones.push(new_msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: this.msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id\n      });\n      this.msg = \"\";\n    }\n  },\n  computed: {}\n};\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mensajes\">\n    <v-container>\n      <h1 class=\"heading grey--text ml-4\"></h1>\n    </v-container>\n    <v-container>\n      <sidebar-menu class=\"mt-4\" :menu=\"menu\"/>\n\n      <v-layout row justify-start mb-2></v-layout>\n      <v-container fluid grid-list-md>\n        <v-layout row wrap>\n          <v-flex flat>\n            <v-card v-for=\"chat in conversaciones\" :key=\"chat.key\" class=\"ma-1\">\n              <v-layout row wrap>\n                <v-flex xs6 sm6 md6>\n                  <h3 class=\"ma-4\" v-if=\"user != chat.user\">L: {{ chat.text }}</h3>\n                </v-flex>\n\n                <v-flex xs6 sm6 md6 class=\"text-xs-right\">\n                  <h3 class=\"ma-4\" v-if=\"user == chat.user\">R: {{ chat.text }}</h3>\n                </v-flex>\n              </v-layout>\n            </v-card>\n            <form v-on:submit.prevent=\"sendMessage\">\n              <v-text-field\n                class=\"mx-1 mt-2\"\n                solo\n                placeholder=\"Escribir mensaje ...\"\n                append-icon=\"send\"\n                v-model=\"msg\"\n                @click:append=\"sendMessage\"\n                clearable\n              ></v-text-field>\n            </form>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-container>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport store from \"../store.js\";\nimport { API_BASE } from \"../config\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  components: {},\n  name: \"Chat\",\n  data() {\n    return {\n      user: localStorage.user,\n      seller: \"\",\n      msg: \"\",\n      buyer: \"\",\n      token: store.getters.token,\n      conversaciones: [],\n      user: localStorage.user,\n      socket: io(`${API_BASE}/mychat`)\n    };\n  },\n  mounted() {\n    console.log(this.user);\n    const URL = `${API_BASE}/chat/` + this.$route.params.id;\n    axios\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.token\n        }\n      })\n      .then(response => {\n        this.conversaciones = response.data.data;\n        console.log(this.conversaciones);\n      });\n\n    this.socket.emit(\"JOINED\", {\n      room: this.$route.params.id\n    });\n\n    this.socket.on(\"MESSAGE\", data => {\n      console.log(data);\n      this.conversaciones.push(data);\n    });\n  },\n  methods: {\n    sendMessage(e) {\n      e.preventDefault();\n      console.log(this.socket);\n\n      //this.conversaciones.push(new_msg);\n      this.socket.emit(\"SEND_MESSAGE\", {\n        user: this.user,\n        text: this.msg,\n        conversacion: this.$route.params.id,\n        room: this.$route.params.id\n      });\n      this.msg = \"\";\n    }\n  },\n  computed: {}\n};\n</script>\n"]}]}